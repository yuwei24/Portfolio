//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PortfolioModel", "FK_Assets_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Portfolio.MVC.Models.Fund), "Asset", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Portfolio.MVC.Models.Asset), true)]
[assembly: EdmRelationshipAttribute("PortfolioModel", "FK_Trades_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Portfolio.MVC.Models.Fund), "Trade", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Portfolio.MVC.Models.Trade), true)]
[assembly: EdmRelationshipAttribute("PortfolioModel", "FK_Divident_Funds", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Portfolio.MVC.Models.Fund), "Divident", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Portfolio.MVC.Models.Divident), true)]

#endregion

namespace Portfolio.MVC.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PortfolioEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PortfolioEntities object using the connection string found in the 'PortfolioEntities' section of the application configuration file.
        /// </summary>
        public PortfolioEntities() : base("name=PortfolioEntities", "PortfolioEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PortfolioEntities object.
        /// </summary>
        public PortfolioEntities(string connectionString) : base(connectionString, "PortfolioEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PortfolioEntities object.
        /// </summary>
        public PortfolioEntities(EntityConnection connection) : base(connection, "PortfolioEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Asset> Assets
        {
            get
            {
                if ((_Assets == null))
                {
                    _Assets = base.CreateObjectSet<Asset>("Assets");
                }
                return _Assets;
            }
        }
        private ObjectSet<Asset> _Assets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExchangeRate> ExchangeRates
        {
            get
            {
                if ((_ExchangeRates == null))
                {
                    _ExchangeRates = base.CreateObjectSet<ExchangeRate>("ExchangeRates");
                }
                return _ExchangeRates;
            }
        }
        private ObjectSet<ExchangeRate> _ExchangeRates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Fund> Funds
        {
            get
            {
                if ((_Funds == null))
                {
                    _Funds = base.CreateObjectSet<Fund>("Funds");
                }
                return _Funds;
            }
        }
        private ObjectSet<Fund> _Funds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobEventLog> JobEventLogs
        {
            get
            {
                if ((_JobEventLogs == null))
                {
                    _JobEventLogs = base.CreateObjectSet<JobEventLog>("JobEventLogs");
                }
                return _JobEventLogs;
            }
        }
        private ObjectSet<JobEventLog> _JobEventLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Price> Prices
        {
            get
            {
                if ((_Prices == null))
                {
                    _Prices = base.CreateObjectSet<Price>("Prices");
                }
                return _Prices;
            }
        }
        private ObjectSet<Price> _Prices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Trade> Trades
        {
            get
            {
                if ((_Trades == null))
                {
                    _Trades = base.CreateObjectSet<Trade>("Trades");
                }
                return _Trades;
            }
        }
        private ObjectSet<Trade> _Trades;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Deposit> Deposits
        {
            get
            {
                if ((_Deposits == null))
                {
                    _Deposits = base.CreateObjectSet<Deposit>("Deposits");
                }
                return _Deposits;
            }
        }
        private ObjectSet<Deposit> _Deposits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Divident> Dividents
        {
            get
            {
                if ((_Dividents == null))
                {
                    _Dividents = base.CreateObjectSet<Divident>("Dividents");
                }
                return _Dividents;
            }
        }
        private ObjectSet<Divident> _Dividents;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Assets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssets(Asset asset)
        {
            base.AddObject("Assets", asset);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExchangeRates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExchangeRates(ExchangeRate exchangeRate)
        {
            base.AddObject("ExchangeRates", exchangeRate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Funds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFunds(Fund fund)
        {
            base.AddObject("Funds", fund);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobEventLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobEventLogs(JobEventLog jobEventLog)
        {
            base.AddObject("JobEventLogs", jobEventLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Prices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrices(Price price)
        {
            base.AddObject("Prices", price);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Trades EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrades(Trade trade)
        {
            base.AddObject("Trades", trade);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Deposits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeposits(Deposit deposit)
        {
            base.AddObject("Deposits", deposit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Dividents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDividents(Divident divident)
        {
            base.AddObject("Dividents", divident);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PortfolioModel", Name="Asset")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Asset : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Asset object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fundId">Initial value of the FundId property.</param>
        /// <param name="assetDate">Initial value of the AssetDate property.</param>
        /// <param name="shares">Initial value of the Shares property.</param>
        /// <param name="assets">Initial value of the Assets property.</param>
        public static Asset CreateAsset(global::System.Int32 id, global::System.Int32 fundId, global::System.DateTime assetDate, global::System.Decimal shares, global::System.Decimal assets)
        {
            Asset asset = new Asset();
            asset.Id = id;
            asset.FundId = fundId;
            asset.AssetDate = assetDate;
            asset.Shares = shares;
            asset.Assets = assets;
            return asset;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundId
        {
            get
            {
                return _FundId;
            }
            set
            {
                OnFundIdChanging(value);
                ReportPropertyChanging("FundId");
                _FundId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundId");
                OnFundIdChanged();
            }
        }
        private global::System.Int32 _FundId;
        partial void OnFundIdChanging(global::System.Int32 value);
        partial void OnFundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AssetDate
        {
            get
            {
                return _AssetDate;
            }
            set
            {
                OnAssetDateChanging(value);
                ReportPropertyChanging("AssetDate");
                _AssetDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssetDate");
                OnAssetDateChanged();
            }
        }
        private global::System.DateTime _AssetDate;
        partial void OnAssetDateChanging(global::System.DateTime value);
        partial void OnAssetDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Shares
        {
            get
            {
                return _Shares;
            }
            set
            {
                OnSharesChanging(value);
                ReportPropertyChanging("Shares");
                _Shares = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Shares");
                OnSharesChanged();
            }
        }
        private global::System.Decimal _Shares;
        partial void OnSharesChanging(global::System.Decimal value);
        partial void OnSharesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Assets
        {
            get
            {
                return _Assets;
            }
            set
            {
                OnAssetsChanging(value);
                ReportPropertyChanging("Assets");
                _Assets = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Assets");
                OnAssetsChanged();
            }
        }
        private global::System.Decimal _Assets;
        partial void OnAssetsChanging(global::System.Decimal value);
        partial void OnAssetsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PortfolioModel", "FK_Assets_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("PortfolioModel.FK_Assets_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("PortfolioModel.FK_Assets_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("PortfolioModel.FK_Assets_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("PortfolioModel.FK_Assets_Fund", "Fund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PortfolioModel", Name="Deposit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Deposit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Deposit object.
        /// </summary>
        /// <param name="depositDate">Initial value of the DepositDate property.</param>
        /// <param name="matureDate">Initial value of the MatureDate property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="interestRate">Initial value of the InterestRate property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static Deposit CreateDeposit(global::System.DateTime depositDate, global::System.DateTime matureDate, global::System.Int32 duration, global::System.Decimal amount, global::System.Decimal interestRate, global::System.Int32 id)
        {
            Deposit deposit = new Deposit();
            deposit.DepositDate = depositDate;
            deposit.MatureDate = matureDate;
            deposit.Duration = duration;
            deposit.Amount = amount;
            deposit.InterestRate = interestRate;
            deposit.Id = id;
            return deposit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DepositDate
        {
            get
            {
                return _DepositDate;
            }
            set
            {
                OnDepositDateChanging(value);
                ReportPropertyChanging("DepositDate");
                _DepositDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepositDate");
                OnDepositDateChanged();
            }
        }
        private global::System.DateTime _DepositDate;
        partial void OnDepositDateChanging(global::System.DateTime value);
        partial void OnDepositDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MatureDate
        {
            get
            {
                return _MatureDate;
            }
            set
            {
                OnMatureDateChanging(value);
                ReportPropertyChanging("MatureDate");
                _MatureDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MatureDate");
                OnMatureDateChanged();
            }
        }
        private global::System.DateTime _MatureDate;
        partial void OnMatureDateChanging(global::System.DateTime value);
        partial void OnMatureDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.Int32 _Duration;
        partial void OnDurationChanging(global::System.Int32 value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal InterestRate
        {
            get
            {
                return _InterestRate;
            }
            set
            {
                OnInterestRateChanging(value);
                ReportPropertyChanging("InterestRate");
                _InterestRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InterestRate");
                OnInterestRateChanged();
            }
        }
        private global::System.Decimal _InterestRate;
        partial void OnInterestRateChanging(global::System.Decimal value);
        partial void OnInterestRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bank
        {
            get
            {
                return _Bank;
            }
            set
            {
                OnBankChanging(value);
                ReportPropertyChanging("Bank");
                _Bank = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Bank");
                OnBankChanged();
            }
        }
        private global::System.String _Bank;
        partial void OnBankChanging(global::System.String value);
        partial void OnBankChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PortfolioModel", Name="Divident")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Divident : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Divident object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fundId">Initial value of the FundId property.</param>
        /// <param name="dividentDate">Initial value of the DividentDate property.</param>
        /// <param name="shares">Initial value of the Shares property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static Divident CreateDivident(global::System.Int32 id, global::System.Int32 fundId, global::System.DateTime dividentDate, global::System.Decimal shares, global::System.Decimal amount)
        {
            Divident divident = new Divident();
            divident.Id = id;
            divident.FundId = fundId;
            divident.DividentDate = dividentDate;
            divident.Shares = shares;
            divident.Amount = amount;
            return divident;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundId
        {
            get
            {
                return _FundId;
            }
            set
            {
                OnFundIdChanging(value);
                ReportPropertyChanging("FundId");
                _FundId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundId");
                OnFundIdChanged();
            }
        }
        private global::System.Int32 _FundId;
        partial void OnFundIdChanging(global::System.Int32 value);
        partial void OnFundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DividentDate
        {
            get
            {
                return _DividentDate;
            }
            set
            {
                OnDividentDateChanging(value);
                ReportPropertyChanging("DividentDate");
                _DividentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DividentDate");
                OnDividentDateChanged();
            }
        }
        private global::System.DateTime _DividentDate;
        partial void OnDividentDateChanging(global::System.DateTime value);
        partial void OnDividentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Shares
        {
            get
            {
                return _Shares;
            }
            set
            {
                OnSharesChanging(value);
                ReportPropertyChanging("Shares");
                _Shares = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Shares");
                OnSharesChanged();
            }
        }
        private global::System.Decimal _Shares;
        partial void OnSharesChanging(global::System.Decimal value);
        partial void OnSharesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PortfolioModel", "FK_Divident_Funds", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("PortfolioModel.FK_Divident_Funds", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("PortfolioModel.FK_Divident_Funds", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("PortfolioModel.FK_Divident_Funds", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("PortfolioModel.FK_Divident_Funds", "Fund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PortfolioModel", Name="ExchangeRate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExchangeRate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExchangeRate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="currency">Initial value of the Currency property.</param>
        /// <param name="rate">Initial value of the Rate property.</param>
        /// <param name="rateDate">Initial value of the RateDate property.</param>
        public static ExchangeRate CreateExchangeRate(global::System.Int32 id, global::System.String currency, global::System.Decimal rate, global::System.DateTime rateDate)
        {
            ExchangeRate exchangeRate = new ExchangeRate();
            exchangeRate.Id = id;
            exchangeRate.Currency = currency;
            exchangeRate.Rate = rate;
            exchangeRate.RateDate = rateDate;
            return exchangeRate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private global::System.Decimal _Rate;
        partial void OnRateChanging(global::System.Decimal value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RateDate
        {
            get
            {
                return _RateDate;
            }
            set
            {
                OnRateDateChanging(value);
                ReportPropertyChanging("RateDate");
                _RateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RateDate");
                OnRateDateChanged();
            }
        }
        private global::System.DateTime _RateDate;
        partial void OnRateDateChanging(global::System.DateTime value);
        partial void OnRateDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PortfolioModel", Name="Fund")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Fund : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Fund object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fundCode">Initial value of the FundCode property.</param>
        /// <param name="fundType">Initial value of the FundType property.</param>
        public static Fund CreateFund(global::System.Int32 id, global::System.String fundCode, global::System.String fundType)
        {
            Fund fund = new Fund();
            fund.Id = id;
            fund.FundCode = fundCode;
            fund.FundType = fundType;
            return fund;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FundCode
        {
            get
            {
                return _FundCode;
            }
            set
            {
                OnFundCodeChanging(value);
                ReportPropertyChanging("FundCode");
                _FundCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FundCode");
                OnFundCodeChanged();
            }
        }
        private global::System.String _FundCode;
        partial void OnFundCodeChanging(global::System.String value);
        partial void OnFundCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FundName
        {
            get
            {
                return _FundName;
            }
            set
            {
                OnFundNameChanging(value);
                ReportPropertyChanging("FundName");
                _FundName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FundName");
                OnFundNameChanged();
            }
        }
        private global::System.String _FundName;
        partial void OnFundNameChanging(global::System.String value);
        partial void OnFundNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FundType
        {
            get
            {
                return _FundType;
            }
            set
            {
                OnFundTypeChanging(value);
                ReportPropertyChanging("FundType");
                _FundType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FundType");
                OnFundTypeChanged();
            }
        }
        private global::System.String _FundType;
        partial void OnFundTypeChanging(global::System.String value);
        partial void OnFundTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FundCodePrefix
        {
            get
            {
                return _FundCodePrefix;
            }
            set
            {
                OnFundCodePrefixChanging(value);
                ReportPropertyChanging("FundCodePrefix");
                _FundCodePrefix = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FundCodePrefix");
                OnFundCodePrefixChanged();
            }
        }
        private global::System.String _FundCodePrefix;
        partial void OnFundCodePrefixChanging(global::System.String value);
        partial void OnFundCodePrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PortfolioModel", "FK_Assets_Fund", "Asset")]
        public EntityCollection<Asset> Assets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Asset>("PortfolioModel.FK_Assets_Fund", "Asset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Asset>("PortfolioModel.FK_Assets_Fund", "Asset", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PortfolioModel", "FK_Trades_Fund", "Trade")]
        public EntityCollection<Trade> Trades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trade>("PortfolioModel.FK_Trades_Fund", "Trade");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trade>("PortfolioModel.FK_Trades_Fund", "Trade", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PortfolioModel", "FK_Divident_Funds", "Divident")]
        public EntityCollection<Divident> Dividents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Divident>("PortfolioModel.FK_Divident_Funds", "Divident");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Divident>("PortfolioModel.FK_Divident_Funds", "Divident", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PortfolioModel", Name="JobEventLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobEventLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobEventLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="job">Initial value of the Job property.</param>
        /// <param name="runDate">Initial value of the RunDate property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="lastRunOn">Initial value of the LastRunOn property.</param>
        public static JobEventLog CreateJobEventLog(global::System.Int32 id, global::System.String job, global::System.DateTime runDate, global::System.Int16 status, global::System.DateTime lastRunOn)
        {
            JobEventLog jobEventLog = new JobEventLog();
            jobEventLog.Id = id;
            jobEventLog.Job = job;
            jobEventLog.RunDate = runDate;
            jobEventLog.Status = status;
            jobEventLog.LastRunOn = lastRunOn;
            return jobEventLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Job
        {
            get
            {
                return _Job;
            }
            set
            {
                OnJobChanging(value);
                ReportPropertyChanging("Job");
                _Job = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Job");
                OnJobChanged();
            }
        }
        private global::System.String _Job;
        partial void OnJobChanging(global::System.String value);
        partial void OnJobChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RunDate
        {
            get
            {
                return _RunDate;
            }
            set
            {
                OnRunDateChanging(value);
                ReportPropertyChanging("RunDate");
                _RunDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RunDate");
                OnRunDateChanged();
            }
        }
        private global::System.DateTime _RunDate;
        partial void OnRunDateChanging(global::System.DateTime value);
        partial void OnRunDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int16 _Status;
        partial void OnStatusChanging(global::System.Int16 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastRunOn
        {
            get
            {
                return _LastRunOn;
            }
            set
            {
                OnLastRunOnChanging(value);
                ReportPropertyChanging("LastRunOn");
                _LastRunOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastRunOn");
                OnLastRunOnChanged();
            }
        }
        private global::System.DateTime _LastRunOn;
        partial void OnLastRunOnChanging(global::System.DateTime value);
        partial void OnLastRunOnChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PortfolioModel", Name="Price")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Price : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Price object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fundId">Initial value of the FundId property.</param>
        /// <param name="priceDate">Initial value of the PriceDate property.</param>
        /// <param name="price1">Initial value of the Price1 property.</param>
        public static Price CreatePrice(global::System.Int32 id, global::System.Int32 fundId, global::System.DateTime priceDate, global::System.Decimal price1)
        {
            Price price = new Price();
            price.Id = id;
            price.FundId = fundId;
            price.PriceDate = priceDate;
            price.Price1 = price1;
            return price;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundId
        {
            get
            {
                return _FundId;
            }
            set
            {
                OnFundIdChanging(value);
                ReportPropertyChanging("FundId");
                _FundId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundId");
                OnFundIdChanged();
            }
        }
        private global::System.Int32 _FundId;
        partial void OnFundIdChanging(global::System.Int32 value);
        partial void OnFundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PriceDate
        {
            get
            {
                return _PriceDate;
            }
            set
            {
                OnPriceDateChanging(value);
                ReportPropertyChanging("PriceDate");
                _PriceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceDate");
                OnPriceDateChanged();
            }
        }
        private global::System.DateTime _PriceDate;
        partial void OnPriceDateChanging(global::System.DateTime value);
        partial void OnPriceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price1
        {
            get
            {
                return _Price1;
            }
            set
            {
                OnPrice1Changing(value);
                ReportPropertyChanging("Price1");
                _Price1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price1");
                OnPrice1Changed();
            }
        }
        private global::System.Decimal _Price1;
        partial void OnPrice1Changing(global::System.Decimal value);
        partial void OnPrice1Changed();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PortfolioModel", Name="Trade")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Trade : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Trade object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fundId">Initial value of the FundId property.</param>
        /// <param name="tradeDate">Initial value of the TradeDate property.</param>
        /// <param name="shares">Initial value of the Shares property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static Trade CreateTrade(global::System.Int32 id, global::System.Int32 fundId, global::System.DateTime tradeDate, global::System.Decimal shares, global::System.Decimal amount)
        {
            Trade trade = new Trade();
            trade.Id = id;
            trade.FundId = fundId;
            trade.TradeDate = tradeDate;
            trade.Shares = shares;
            trade.Amount = amount;
            return trade;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundId
        {
            get
            {
                return _FundId;
            }
            set
            {
                OnFundIdChanging(value);
                ReportPropertyChanging("FundId");
                _FundId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundId");
                OnFundIdChanged();
            }
        }
        private global::System.Int32 _FundId;
        partial void OnFundIdChanging(global::System.Int32 value);
        partial void OnFundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TradeDate
        {
            get
            {
                return _TradeDate;
            }
            set
            {
                OnTradeDateChanging(value);
                ReportPropertyChanging("TradeDate");
                _TradeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradeDate");
                OnTradeDateChanged();
            }
        }
        private global::System.DateTime _TradeDate;
        partial void OnTradeDateChanging(global::System.DateTime value);
        partial void OnTradeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Shares
        {
            get
            {
                return _Shares;
            }
            set
            {
                OnSharesChanging(value);
                ReportPropertyChanging("Shares");
                _Shares = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Shares");
                OnSharesChanged();
            }
        }
        private global::System.Decimal _Shares;
        partial void OnSharesChanging(global::System.Decimal value);
        partial void OnSharesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PortfolioModel", "FK_Trades_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("PortfolioModel.FK_Trades_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("PortfolioModel.FK_Trades_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("PortfolioModel.FK_Trades_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("PortfolioModel.FK_Trades_Fund", "Fund", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
