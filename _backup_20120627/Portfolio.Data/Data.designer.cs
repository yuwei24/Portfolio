#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Portfolio.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Portfolio")]
	public partial class DataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public DataDataContext() : 
				base(global::Portfolio.Data.Properties.Settings.Default.PortfolioConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_DeleteAsset")]
		public int usp_DeleteAsset([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UpdatePrice")]
		public int usp_UpdatePrice([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FundId", DbType="Int")] System.Nullable<int> fundId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PriceDate", DbType="DateTime")] System.Nullable<System.DateTime> priceDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Decimal(14,4)")] System.Nullable<decimal> price)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, fundId, priceDate, price);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_DeleteFund")]
		public int usp_DeleteFund([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_DeletePrice")]
		public int usp_DeletePrice([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_InsertAsset")]
		public int usp_InsertAsset([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FundId", DbType="Int")] System.Nullable<int> fundId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssetDate", DbType="DateTime")] System.Nullable<System.DateTime> assetDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Shares", DbType="Decimal(14,2)")] System.Nullable<decimal> shares, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Assets", DbType="Decimal(14,4)")] System.Nullable<decimal> assets, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] ref System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fundId, assetDate, shares, assets, id);
			id = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_InsertFund")]
		public int usp_InsertFund([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FundCode", DbType="VarChar(20)")] string fundCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FundName", DbType="NVarChar(50)")] string fundName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FundType", DbType="VarChar(20)")] string fundType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FundCodePrefix", DbType="VarChar(10)")] string fundCodePrefix, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] ref System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fundCode, fundName, fundType, fundCodePrefix, id);
			id = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_InsertPrice")]
		public int usp_InsertPrice([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FundId", DbType="Int")] System.Nullable<int> fundId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PriceDate", DbType="DateTime")] System.Nullable<System.DateTime> priceDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Decimal(14,4)")] System.Nullable<decimal> price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] ref System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fundId, priceDate, price, id);
			id = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SelectAsset")]
		public ISingleResult<usp_SelectAssetResult> usp_SelectAsset([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<usp_SelectAssetResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SelectFund")]
		public ISingleResult<usp_SelectFundResult> usp_SelectFund([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<usp_SelectFundResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SelectFundsAll")]
		public ISingleResult<usp_SelectFundsAllResult> usp_SelectFundsAll()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<usp_SelectFundsAllResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SelectPrice")]
		public ISingleResult<usp_SelectPriceResult> usp_SelectPrice([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<usp_SelectPriceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SelectPricesAll")]
		public ISingleResult<usp_SelectPricesAllResult> usp_SelectPricesAll()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<usp_SelectPricesAllResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UpdateAsset")]
		public int usp_UpdateAsset([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FundId", DbType="Int")] System.Nullable<int> fundId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssetDate", DbType="DateTime")] System.Nullable<System.DateTime> assetDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Shares", DbType="Decimal(14,2)")] System.Nullable<decimal> shares, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Assets", DbType="Decimal(14,4)")] System.Nullable<decimal> assets)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, fundId, assetDate, shares, assets);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UpdateFund")]
		public int usp_UpdateFund([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FundCode", DbType="VarChar(20)")] string fundCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FundName", DbType="NVarChar(50)")] string fundName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FundType", DbType="VarChar(20)")] string fundType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FundCodePrefix", DbType="VarChar(10)")] string fundCodePrefix)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, fundCode, fundName, fundType, fundCodePrefix);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SelectPriceByFundAndDate")]
		public ISingleResult<usp_SelectPriceByFundAndDateResult> usp_SelectPriceByFundAndDate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FundId", DbType="Int")] System.Nullable<int> fundId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AsOfDate", DbType="DateTime")] System.Nullable<System.DateTime> asOfDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fundId, asOfDate);
			return ((ISingleResult<usp_SelectPriceByFundAndDateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SelectAssetByFundAndDate")]
		public ISingleResult<usp_SelectAssetByFundAndDateResult> usp_SelectAssetByFundAndDate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FundId", DbType="Int")] System.Nullable<int> fundId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AsOfDate", DbType="DateTime")] System.Nullable<System.DateTime> asOfDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fundId, asOfDate);
			return ((ISingleResult<usp_SelectAssetByFundAndDateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_InsertJobEventLog")]
		public int usp_InsertJobEventLog([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Job", DbType="VarChar(20)")] string job, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RunDate", DbType="DateTime")] System.Nullable<System.DateTime> runDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="SmallInt")] System.Nullable<short> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastRunOn", DbType="DateTime")] System.Nullable<System.DateTime> lastRunOn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] ref System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), job, runDate, status, lastRunOn, id);
			id = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SelectJobEventLogLastSuccessfulRun")]
		public ISingleResult<usp_SelectJobEventLogLastSuccessfulRunResult> usp_SelectJobEventLogLastSuccessfulRun([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Job", DbType="VarChar(20)")] string job, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RunDate", DbType="DateTime")] System.Nullable<System.DateTime> runDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), job, runDate);
			return ((ISingleResult<usp_SelectJobEventLogLastSuccessfulRunResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SelectAssetsAll")]
		public ISingleResult<usp_SelectAssetsAllResult> usp_SelectAssetsAll()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<usp_SelectAssetsAllResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_InsertExchangeRate")]
		public int usp_InsertExchangeRate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Currency", DbType="VarChar(10)")] string currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Rate", DbType="Decimal(14,4)")] System.Nullable<decimal> rate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RateDate", DbType="DateTime")] System.Nullable<System.DateTime> rateDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] ref System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), currency, rate, rateDate, id);
			id = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_DeleteExchangeRate")]
		public int usp_DeleteExchangeRate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SelectExchangeRate")]
		public ISingleResult<usp_SelectExchangeRateResult> usp_SelectExchangeRate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Currency", DbType="VarChar(10)")] string currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AsOfDate", DbType="DateTime")] System.Nullable<System.DateTime> asOfDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), currency, asOfDate);
			return ((ISingleResult<usp_SelectExchangeRateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UpdateExchangeRate")]
		public int usp_UpdateExchangeRate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Currency", DbType="VarChar(10)")] string currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Rate", DbType="Decimal(14,4)")] System.Nullable<decimal> rate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RateDate", DbType="DateTime")] System.Nullable<System.DateTime> rateDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, currency, rate, rateDate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SelectFundsAll")]
		public ISingleResult<usp_SelectFundsAllResult1> usp_SelectFundsAll1()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<usp_SelectFundsAllResult1>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SelectAssetsByDate")]
		public ISingleResult<usp_SelectAssetsByDateResult> usp_SelectAssetsByDate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FundType", DbType="VarChar(10)")] string fundType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AsOfDate", DbType="DateTime")] System.Nullable<System.DateTime> asOfDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fundType, asOfDate);
			return ((ISingleResult<usp_SelectAssetsByDateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SelectAssetsByDateRange")]
		public ISingleResult<usp_SelectAssetsByDateRangeResult> usp_SelectAssetsByDateRange([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FundType", DbType="VarChar(10)")] string fundType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeginDate", DbType="DateTime")] System.Nullable<System.DateTime> beginDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fundType, beginDate, endDate);
			return ((ISingleResult<usp_SelectAssetsByDateRangeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_InsertEventLog")]
		public int usp_InsertEventLog([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="VarChar(10)")] string type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Message", DbType="VarChar(MAX)")] string message, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LogTimestamp", DbType="DateTime")] System.Nullable<System.DateTime> logTimestamp, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] ref System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), type, message, logTimestamp, id);
			id = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
	}
	
	public partial class usp_SelectAssetResult
	{
		
		private int _Id;
		
		private int _FundId;
		
		private System.DateTime _AssetDate;
		
		private decimal _Shares;
		
		private decimal _Assets;
		
		public usp_SelectAssetResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundId", DbType="Int NOT NULL")]
		public int FundId
		{
			get
			{
				return this._FundId;
			}
			set
			{
				if ((this._FundId != value))
				{
					this._FundId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetDate", DbType="DateTime NOT NULL")]
		public System.DateTime AssetDate
		{
			get
			{
				return this._AssetDate;
			}
			set
			{
				if ((this._AssetDate != value))
				{
					this._AssetDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shares", DbType="Decimal(14,2) NOT NULL")]
		public decimal Shares
		{
			get
			{
				return this._Shares;
			}
			set
			{
				if ((this._Shares != value))
				{
					this._Shares = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assets", DbType="Decimal(14,4) NOT NULL")]
		public decimal Assets
		{
			get
			{
				return this._Assets;
			}
			set
			{
				if ((this._Assets != value))
				{
					this._Assets = value;
				}
			}
		}
	}
	
	public partial class usp_SelectFundResult
	{
		
		private int _Id;
		
		private string _FundCode;
		
		private string _FundName;
		
		private string _FundType;
		
		private string _FundCodePrefix;
		
		public usp_SelectFundResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FundCode
		{
			get
			{
				return this._FundCode;
			}
			set
			{
				if ((this._FundCode != value))
				{
					this._FundCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundName", DbType="NVarChar(50)")]
		public string FundName
		{
			get
			{
				return this._FundName;
			}
			set
			{
				if ((this._FundName != value))
				{
					this._FundName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FundType
		{
			get
			{
				return this._FundType;
			}
			set
			{
				if ((this._FundType != value))
				{
					this._FundType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundCodePrefix", DbType="VarChar(10)")]
		public string FundCodePrefix
		{
			get
			{
				return this._FundCodePrefix;
			}
			set
			{
				if ((this._FundCodePrefix != value))
				{
					this._FundCodePrefix = value;
				}
			}
		}
	}
	
	public partial class usp_SelectFundsAllResult
	{
		
		private int _Id;
		
		private string _FundCode;
		
		private string _FundName;
		
		private string _FundType;
		
		private string _FundCodePrefix;
		
		public usp_SelectFundsAllResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FundCode
		{
			get
			{
				return this._FundCode;
			}
			set
			{
				if ((this._FundCode != value))
				{
					this._FundCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundName", DbType="NVarChar(50)")]
		public string FundName
		{
			get
			{
				return this._FundName;
			}
			set
			{
				if ((this._FundName != value))
				{
					this._FundName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FundType
		{
			get
			{
				return this._FundType;
			}
			set
			{
				if ((this._FundType != value))
				{
					this._FundType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundCodePrefix", DbType="VarChar(10)")]
		public string FundCodePrefix
		{
			get
			{
				return this._FundCodePrefix;
			}
			set
			{
				if ((this._FundCodePrefix != value))
				{
					this._FundCodePrefix = value;
				}
			}
		}
	}
	
	public partial class usp_SelectPriceResult
	{
		
		private int _Id;
		
		private int _FundId;
		
		private System.DateTime _PriceDate;
		
		private decimal _Price;
		
		public usp_SelectPriceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundId", DbType="Int NOT NULL")]
		public int FundId
		{
			get
			{
				return this._FundId;
			}
			set
			{
				if ((this._FundId != value))
				{
					this._FundId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDate", DbType="DateTime NOT NULL")]
		public System.DateTime PriceDate
		{
			get
			{
				return this._PriceDate;
			}
			set
			{
				if ((this._PriceDate != value))
				{
					this._PriceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(14,4) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
	}
	
	public partial class usp_SelectPricesAllResult
	{
		
		private int _Id;
		
		private int _FundId;
		
		private System.DateTime _PriceDate;
		
		private decimal _Price;
		
		public usp_SelectPricesAllResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundId", DbType="Int NOT NULL")]
		public int FundId
		{
			get
			{
				return this._FundId;
			}
			set
			{
				if ((this._FundId != value))
				{
					this._FundId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDate", DbType="DateTime NOT NULL")]
		public System.DateTime PriceDate
		{
			get
			{
				return this._PriceDate;
			}
			set
			{
				if ((this._PriceDate != value))
				{
					this._PriceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(14,4) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
	}
	
	public partial class usp_SelectPriceByFundAndDateResult
	{
		
		private int _Id;
		
		private int _FundId;
		
		private System.DateTime _PriceDate;
		
		private decimal _Price;
		
		public usp_SelectPriceByFundAndDateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundId", DbType="Int NOT NULL")]
		public int FundId
		{
			get
			{
				return this._FundId;
			}
			set
			{
				if ((this._FundId != value))
				{
					this._FundId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDate", DbType="DateTime NOT NULL")]
		public System.DateTime PriceDate
		{
			get
			{
				return this._PriceDate;
			}
			set
			{
				if ((this._PriceDate != value))
				{
					this._PriceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(14,4) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
	}
	
	public partial class usp_SelectAssetByFundAndDateResult
	{
		
		private int _Id;
		
		private int _FundId;
		
		private System.DateTime _AssetDate;
		
		private decimal _Shares;
		
		private decimal _Assets;
		
		public usp_SelectAssetByFundAndDateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundId", DbType="Int NOT NULL")]
		public int FundId
		{
			get
			{
				return this._FundId;
			}
			set
			{
				if ((this._FundId != value))
				{
					this._FundId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetDate", DbType="DateTime NOT NULL")]
		public System.DateTime AssetDate
		{
			get
			{
				return this._AssetDate;
			}
			set
			{
				if ((this._AssetDate != value))
				{
					this._AssetDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shares", DbType="Decimal(14,2) NOT NULL")]
		public decimal Shares
		{
			get
			{
				return this._Shares;
			}
			set
			{
				if ((this._Shares != value))
				{
					this._Shares = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assets", DbType="Decimal(14,4) NOT NULL")]
		public decimal Assets
		{
			get
			{
				return this._Assets;
			}
			set
			{
				if ((this._Assets != value))
				{
					this._Assets = value;
				}
			}
		}
	}
	
	public partial class usp_SelectJobEventLogLastSuccessfulRunResult
	{
		
		private int _Id;
		
		private string _Job;
		
		private System.DateTime _RunDate;
		
		private short _Status;
		
		private System.DateTime _LastRunOn;
		
		public usp_SelectJobEventLogLastSuccessfulRunResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Job", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Job
		{
			get
			{
				return this._Job;
			}
			set
			{
				if ((this._Job != value))
				{
					this._Job = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunDate", DbType="DateTime NOT NULL")]
		public System.DateTime RunDate
		{
			get
			{
				return this._RunDate;
			}
			set
			{
				if ((this._RunDate != value))
				{
					this._RunDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRunOn", DbType="DateTime NOT NULL")]
		public System.DateTime LastRunOn
		{
			get
			{
				return this._LastRunOn;
			}
			set
			{
				if ((this._LastRunOn != value))
				{
					this._LastRunOn = value;
				}
			}
		}
	}
	
	public partial class usp_SelectAssetsAllResult
	{
		
		private int _Id;
		
		private int _FundId;
		
		private string _FundName;
		
		private string _FundType;
		
		private decimal _Shares;
		
		private decimal _Assets;
		
		private System.DateTime _AssetDate;
		
		public usp_SelectAssetsAllResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundId", DbType="Int NOT NULL")]
		public int FundId
		{
			get
			{
				return this._FundId;
			}
			set
			{
				if ((this._FundId != value))
				{
					this._FundId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundName", DbType="NVarChar(50)")]
		public string FundName
		{
			get
			{
				return this._FundName;
			}
			set
			{
				if ((this._FundName != value))
				{
					this._FundName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FundType
		{
			get
			{
				return this._FundType;
			}
			set
			{
				if ((this._FundType != value))
				{
					this._FundType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shares", DbType="Decimal(14,2) NOT NULL")]
		public decimal Shares
		{
			get
			{
				return this._Shares;
			}
			set
			{
				if ((this._Shares != value))
				{
					this._Shares = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assets", DbType="Decimal(14,4) NOT NULL")]
		public decimal Assets
		{
			get
			{
				return this._Assets;
			}
			set
			{
				if ((this._Assets != value))
				{
					this._Assets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetDate", DbType="DateTime NOT NULL")]
		public System.DateTime AssetDate
		{
			get
			{
				return this._AssetDate;
			}
			set
			{
				if ((this._AssetDate != value))
				{
					this._AssetDate = value;
				}
			}
		}
	}
	
	public partial class usp_SelectExchangeRateResult
	{
		
		private int _Id;
		
		private string _Currency;
		
		private decimal _Rate;
		
		private System.DateTime _RateDate;
		
		public usp_SelectExchangeRateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(14,4) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this._Rate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateDate", DbType="DateTime NOT NULL")]
		public System.DateTime RateDate
		{
			get
			{
				return this._RateDate;
			}
			set
			{
				if ((this._RateDate != value))
				{
					this._RateDate = value;
				}
			}
		}
	}
	
	public partial class usp_SelectFundsAllResult1
	{
		
		private int _Id;
		
		private string _FundCode;
		
		private string _FundName;
		
		private string _FundType;
		
		private string _FundCodePrefix;
		
		public usp_SelectFundsAllResult1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FundCode
		{
			get
			{
				return this._FundCode;
			}
			set
			{
				if ((this._FundCode != value))
				{
					this._FundCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundName", DbType="NVarChar(50)")]
		public string FundName
		{
			get
			{
				return this._FundName;
			}
			set
			{
				if ((this._FundName != value))
				{
					this._FundName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FundType
		{
			get
			{
				return this._FundType;
			}
			set
			{
				if ((this._FundType != value))
				{
					this._FundType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundCodePrefix", DbType="VarChar(10)")]
		public string FundCodePrefix
		{
			get
			{
				return this._FundCodePrefix;
			}
			set
			{
				if ((this._FundCodePrefix != value))
				{
					this._FundCodePrefix = value;
				}
			}
		}
	}
	
	public partial class usp_SelectAssetsByDateResult
	{
		
		private int _Id;
		
		private int _FundId;
		
		private string _FundName;
		
		private string _FundType;
		
		private decimal _Shares;
		
		private decimal _Assets;
		
		private System.DateTime _AssetDate;
		
		private System.Nullable<decimal> _DailyReturn;
		
		public usp_SelectAssetsByDateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundId", DbType="Int NOT NULL")]
		public int FundId
		{
			get
			{
				return this._FundId;
			}
			set
			{
				if ((this._FundId != value))
				{
					this._FundId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundName", DbType="NVarChar(50)")]
		public string FundName
		{
			get
			{
				return this._FundName;
			}
			set
			{
				if ((this._FundName != value))
				{
					this._FundName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FundType
		{
			get
			{
				return this._FundType;
			}
			set
			{
				if ((this._FundType != value))
				{
					this._FundType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shares", DbType="Decimal(14,2) NOT NULL")]
		public decimal Shares
		{
			get
			{
				return this._Shares;
			}
			set
			{
				if ((this._Shares != value))
				{
					this._Shares = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assets", DbType="Decimal(14,4) NOT NULL")]
		public decimal Assets
		{
			get
			{
				return this._Assets;
			}
			set
			{
				if ((this._Assets != value))
				{
					this._Assets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetDate", DbType="DateTime NOT NULL")]
		public System.DateTime AssetDate
		{
			get
			{
				return this._AssetDate;
			}
			set
			{
				if ((this._AssetDate != value))
				{
					this._AssetDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyReturn", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DailyReturn
		{
			get
			{
				return this._DailyReturn;
			}
			set
			{
				if ((this._DailyReturn != value))
				{
					this._DailyReturn = value;
				}
			}
		}
	}
	
	public partial class usp_SelectAssetsByDateRangeResult
	{
		
		private int _Id;
		
		private int _FundId;
		
		private string _FundName;
		
		private string _FundType;
		
		private decimal _Shares;
		
		private System.Nullable<decimal> _Assets;
		
		private System.DateTime _AssetDate;
		
		private System.Nullable<decimal> _DailyReturn;
		
		public usp_SelectAssetsByDateRangeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundId", DbType="Int NOT NULL")]
		public int FundId
		{
			get
			{
				return this._FundId;
			}
			set
			{
				if ((this._FundId != value))
				{
					this._FundId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string FundName
		{
			get
			{
				return this._FundName;
			}
			set
			{
				if ((this._FundName != value))
				{
					this._FundName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundType", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string FundType
		{
			get
			{
				return this._FundType;
			}
			set
			{
				if ((this._FundType != value))
				{
					this._FundType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shares", DbType="Decimal(2,2) NOT NULL")]
		public decimal Shares
		{
			get
			{
				return this._Shares;
			}
			set
			{
				if ((this._Shares != value))
				{
					this._Shares = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assets", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> Assets
		{
			get
			{
				return this._Assets;
			}
			set
			{
				if ((this._Assets != value))
				{
					this._Assets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetDate", DbType="DateTime NOT NULL")]
		public System.DateTime AssetDate
		{
			get
			{
				return this._AssetDate;
			}
			set
			{
				if ((this._AssetDate != value))
				{
					this._AssetDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyReturn", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DailyReturn
		{
			get
			{
				return this._DailyReturn;
			}
			set
			{
				if ((this._DailyReturn != value))
				{
					this._DailyReturn = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
